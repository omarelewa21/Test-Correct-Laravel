<?php

namespace Tests\Unit;

use Carbon\Carbon;
use Carbon\CarbonInterval;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Illuminate\Support\Str;
use tcCore\EducationLevel;
use tcCore\Http\Helpers\DemoHelper;
use tcCore\Http\Helpers\SvgHelper;
use tcCore\Lib\Repositories\SchoolYearRepository;
use tcCore\OnboardingWizard;
use tcCore\OnboardingWizardStep;
use tcCore\OnboardingWizardUserStep;
use tcCore\Period;
use tcCore\SchoolClass;
use tcCore\SchoolLocation;
use tcCore\Section;
use tcCore\Subject;
use tcCore\Teacher;
use tcCore\Test;
use tcCore\TestTake;
use tcCore\User;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;
use Tests\Unit\Http\Helpers\DemoHelperTestHelper;
use Tests\Unit\Http\Helpers\OnboardingTestHelper;
use Illuminate\Support\Facades\Storage;

class SvgHelperTest extends TestCase
{
    private $disk;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Storage::fake(SvgHelper::DISK);
        $this->disk = Storage::disk(SvgHelper::DISK);
    }

    /** @test */
    public function it_should_create_a_folder_with_structure()
    {
        $uuid = '525123be-1539-45eb-afa1-c3ce78099051';

        (new SvgHelper($uuid));
        $this->disk->assertExists($uuid);
        $this->disk->assertExists(sprintf('%s/question', $uuid));
        $this->disk->assertExists(sprintf('%s/answer', $uuid));
    }

    /** @test */
    public function it_should_create_a_stub_svg_file()
    {
        $uuid = '525123be-1539-45eb-afa1-c3ce78099051';
        (new SvgHelper($uuid));
        $this->disk->assertExists(sprintf('%s/%s', $uuid, SvgHelper::SVG_FILENAME));
        $this->disk->exists(sprintf('%s/%s', $uuid, SvgHelper::SVG_FILENAME));
    }

    /** @test */
    public function it_can_return_the_contents_of_the_svg()
    {
        $this->assertEquals(<<<XML
<svg viewBox="0 0 0 0"
     class="w-full h-full"
     xmlns="http://www.w3.org/2000/svg"
     style="--cursor-type-locked:var(--cursor-crosshair); --cursor-type-draggable:var(--cursor-crosshair);"
>
    <g  id="grid-preview-svg" stroke="var(--all-BlueGrey)" stroke-width="1"></g>
    <g class="question-svg" ></g>
    <g class="answer-svg" ></g>
</svg>
XML,
            (new SvgHelper('adcac1fb-57e3-40a0-ba4a-f895e23c84ea'))->getSvg()
        );
    }

    /** @test */
    public function it_can_update_the_answer_layer()
    {
        $uuid = '01fab6eb-ad9d-4faf-9831-d6ff25e593b2';
        $newAnswerLayer ='<circle cx="50" cy="50" r="40" stroke="black" stroke-width="3" fill="red"/>';
        $svgHelper = new SvgHelper('9227e13e-a495-45cf-b324-ac825ccea771');

        $this->assertStringNotContainsString($newAnswerLayer, $svgHelper->getSvg());
        $svgHelper->updateAnswerLayer($newAnswerLayer);
        $this->assertStringContainsString($newAnswerLayer, $svgHelper->getSvg());

    }


}
