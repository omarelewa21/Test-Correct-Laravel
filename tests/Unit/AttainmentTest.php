<?php
/**
 * Created by PhpStorm.
 * User: erik
 * Date: 12/04/2019
 * Time: 13:18
 */

namespace Tests\Unit;

use Illuminate\Foundation\Testing\DatabaseTransactions;
use Illuminate\Support\Facades\DB;
use tcCore\ArchivedModel;
use tcCore\Attainment;
use tcCore\BaseSubject;
use tcCore\EckidUser;
use tcCore\School;
use tcCore\SchoolClass;
use tcCore\SchoolLocation;
use tcCore\Teacher;
use tcCore\TestTake;
use tcCore\UmbrellaOrganization;
use tcCore\User;
use Tests\TestCase;

class AttainmentTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $baseSubject = BaseSubject::first();
        collect(range(1, 10))->each(function ($i) use ($baseSubject) {
            Attainment::create([
                'name'               => "TBNI Attainment $i",
                'base_subject_id'    => $baseSubject->id,
                'description'        => "TBNI Attainment $i",
                'abbreviation'       => "TBNI Attainment $i",
                'code'               => "TBNI_$i",
                'order'              => $i,
                'education_level_id' => 1,
            ]);
        });

    }

    /** @test */
    public function name_should_return_attainment_translation_with_order_number()
    {
        $attainment = Attainment::orderBy('order')->first();

        app()->setLocale('nl');
        $this->assertEquals('Eindterm 1', $attainment->name);
        app()->setLocale('en');
        $this->assertEquals('Attainment 1', $attainment->name);
    }

    /** @test */
    public function when_learning_goal_then_name_should_return_with_order_number()
    {
        app()->setLocale('nl');
        $attainment = Attainment::orderBy('order')->first();
        $attainment->is_learning_goal = 1;
        $attainment->save();
        $this->assertEquals('Leerdoel 1', $attainment->fresh()->name);
        app()->setLocale('en');
        $this->assertEquals('Learning goal 1', $attainment->name);
    }
}
