<?php

namespace Tests\Unit\FactoryTests\TestTakeFactory;

use Illuminate\Foundation\Testing\DatabaseTransactions;
use Illuminate\Foundation\Testing\WithFaker;
use tcCore\AnswerRating;
use tcCore\FactoryScenarios\FactoryScenarioSchoolSimple;
use tcCore\FactoryScenarios\FactoryScenarioTestTakeTakenOneQuestion;
use tcCore\FactoryScenarios\FactoryScenarioTestTakeTakenTwoQuestions;
use tcCore\TestParticipant;
use Tests\ScenarioLoader;
use Tests\TestCase;

class FactoryTestTakeAnswerRatingTest extends TestCase
{

    use WithFaker;

    private mixed $user;
    protected $loadScenario = FactoryScenarioSchoolSimple::class;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = ScenarioLoader::get('user');
        $this->actingAs($this->user);

    }


    /** @test */
    public function can_add_student_answer_ratings_to_discussing_testtake()
    {
        $startCountAnswerRatings = AnswerRating::count();
        $FactoryTestTake = FactoryScenarioTestTakeTakenOneQuestion::create($this->user)->testTakeFactory;

        $FactoryTestTake->setStatusDiscussing()
            ->addStudentAnswerRatings();

        //todo more specific assertions?
        $this->assertGreaterThan($startCountAnswerRatings, AnswerRating::count());
    }

    /** @test */
    public function can_add_teacher_answer_rating_to_discussed_testtake()
    {
        $startCountAnswerRatings = AnswerRating::count();

        $FactoryTestTake = FactoryScenarioTestTakeTakenTwoQuestions::create($this->user)->testTakeFactory;

        $FactoryTestTake->setStatusDiscussing()
            ->addStudentAnswerRatings()
            ->setStatusDiscussed();
        $this->assertGreaterThan($startCountAnswerRatings, AnswerRating::count());

        $startCountTeacherAnswerRatings = AnswerRating::count();
        $FactoryTestTake->addTeacherAnswerRatings();

        //equals +10, because: FactoryScenarioTestTakeTakenTwoQuestions has:
        // 2 questions and 3 participants (klas1) = 6 answers.
        // (if scenario has changed, test may fail)

        $this->assertEquals($startCountTeacherAnswerRatings + 6, AnswerRating::count());
        $this->assertEquals(8, $FactoryTestTake->testTake->test_take_status_id);
    }
}